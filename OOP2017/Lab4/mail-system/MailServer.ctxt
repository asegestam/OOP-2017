#BlueJ class context
comment0.target=MailServer
comment0.text=\r\n\ A\ simple\ model\ of\ a\ mail\ server.\ The\ server\ is\ able\ to\ receive\r\n\ mail\ items\ for\ storage,\ and\ deliver\ them\ to\ clients\ on\ demand.\r\n\ \r\n\ @author\ David\ J.\ Barnes\ and\ Michael\ K\u00F6lling\r\n\ @version\ 2011.07.31\r\n
comment1.params=
comment1.target=MailServer()
comment1.text=\r\n\ Construct\ a\ mail\ server.\r\n
comment10.params=who
comment10.target=java.util.LinkedList\ getMailbox(java.lang.String)
comment10.text=\r\n\ Retrieves\ the\ mailbox\ for\ a\ user\r\n\r\n\ @param\ who\ the\ owner\ of\ the\ requested\ mailbox\r\n\ @return\ the\ mailbox\ belonging\ to\ who,\r\n\ null\ if\ it\ does\ not\ exist\r\n
comment2.params=who
comment2.target=int\ howManyMailItems(java.lang.String)
comment2.text=\r\n\ Return\ how\ many\ mail\ items\ are\ waiting\ for\ a\ user.\r\n\ @param\ who\ The\ user\ to\ check\ for.\r\n\ @return\ How\ many\ items\ are\ waiting.\r\n
comment3.params=
comment3.target=int\ howManyMessages()
comment3.text=\r\n\ G\u00E5r\ igenom\ alla\ listor\ i\ hashmappen\r\n\ f\u00F6r\ varje\ lista\ inkrementera\ mailCount\ med\ hur\ m\u00E5nga\ medelanden\ som\ finns\ i\ listan\r\n
comment4.params=who
comment4.target=MailItem\ getNextMailItem(java.lang.String)
comment4.text=\r\n\ Return\ the\ next\ mail\ item\ for\ a\ user\ or\ null\ if\ there\r\n\ are\ none.\r\n\ @param\ who\ The\ user\ requesting\ their\ next\ item.\r\n\ @return\ The\ user's\ next\ item.\r\n
comment5.params=Item
comment5.target=boolean\ mailChecker(MailItem)
comment5.text=\r\n\ Kollar\ om\ mailet\ har\ en\ en\ avs\u00E4ndare\ och\ mottagare\r\n\ Kollar\ om\ \u00E4mnnet\ inneh\u00E5ller\ n\u00E5gon\ version\ av\ ordet\ Spam\r\n\ Kollar\ om\ meddelandet\ inneh\u00E5ller\ n\u00E5gon\ version\ av\ Viagra\r\n\ Regex\ uttrycket\ \u00E4r\ case\ insensetive,\ kan\ vara\ flera\ av\ varje\ karakt\u00E4r\r\n
comment6.params=item
comment6.target=void\ post(MailItem)
comment6.text=\r\n\ Add\ the\ given\ mail\ item\ to\ the\ message\ list.\r\n\ @param\ item\ The\ mail\ item\ to\ be\ stored\ on\ the\ server.\r\n
comment7.params=message\ receiver
comment7.target=void\ returnToSender(MailItem,\ java.lang.String)
comment7.text=\r\n\ Return\ a\ message\ with\ unknown\ receiver\ to\ the\ sender\r\n\r\n\ @param\ the\ message\ to\ be\ returned\r\n
comment8.params=user
comment8.target=int\ createMailbox(java.lang.String)
comment8.text=\r\n\ Create\ a\ mailbox\ for\ a\ single\ user\r\n\ @param\ the\ name\ of\ the\ new\ user\r\n\ @return\ 1\ if\ the\ creation\ succeeded\r\n\ 0\ if\ a\ mailbox\ with\ that\ name\ already\ existed\r\n
comment9.params=users
comment9.target=int\ createMailbox(java.lang.String[])
comment9.text=\r\n\ Create\ mailboxes\ for\ users\r\n\ @param\ an\ array\ containing\ the\ names\ of\ the\ new\ users\r\n\ @return\ the\ number\ of\ successfully\ created\ mailboxes,\r\n\ this\ number\ will\ be\ less\ than\ the\ number\ of\r\n\ specified\ users\ if\ some\ mailboxes\ already\ existed\r\n
numComments=11
